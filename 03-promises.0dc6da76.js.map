{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAsDA,SAASC,EAAcC,EAAUC,GAC/BC,QAAQC,IAAIF,GACZC,QAAQC,IAAIH,GACZ,IAAMI,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACvBL,EACFI,EAAQ,CAAER,WAAUC,UAEpBQ,EAAO,CAAET,WAAUC,aA5DTS,SAASC,cAAc,SAC/BC,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAEC,iBAEF,IAAIC,EAAQC,OAAOH,EAAEI,cAAchB,MAAMiB,OACzChB,QAAQC,IAAIU,EAAEI,cAAchB,MAAMiB,OAYlC,IAXA,IAAMC,EAAOH,OAAOH,EAAEI,cAAcE,KAAKD,OACnCE,EAASJ,OAAOH,EAAEI,cAAcG,OAAOF,OAUpCG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACrDnB,QAAQC,IAAIY,GACZb,QAAQC,IAAIkB,GACZtB,EAAcsB,EAAUN,GACrBO,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBuB,YAAW,WACT3B,EAAA4B,OAAOC,QAAQ,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,MAAK,CAC9D2B,SAAO,MAEV3B,MAEJ4B,OAAM,SAAAN,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBuB,YAAW,WACT3B,EAAA4B,OAAOK,QAAQ,sBAAqCH,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,MAAK,CAC7D2B,SAAS,MAEV3B,MAKPc,EAAQA,GAASI,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\nformRef.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n\n  let delay = Number(e.currentTarget.delay.value);\n  console.log(e.currentTarget.delay.value);\n  const step = Number(e.currentTarget.step.value);\n  const amount = Number(e.currentTarget.amount.value);\n\n  // createPromise(2, 1500)\n  // .then(({ position, delay }) => {\n  //   console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  // })\n  // .catch(({ position, delay }) => {\n  //   console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  // });\n\n  for (let position = 1; position <= amount; position += 1) {\n    console.log(delay);\n    console.log(position);\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        setTimeout(() => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n            useIcon: false,\n          });\n        }, delay);\n      })\n      .catch(({ position, delay }) => {\n        setTimeout(() => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n            useIcon: false,\n          });\n        }, delay);\n      });\n    //   .finally(() => {\n    // delay = delay += step;\n    // });\n    delay = delay += step;\n  }\n}\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\nfunction createPromise(position, delay) {\n  console.log(delay);\n  console.log(position);\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","console","log","shouldResolve","Math","random","Promise","resolve","reject","document","querySelector","addEventListener","e","preventDefault","delay1","Number","currentTarget","value","step","amount","position1","then","param","setTimeout","Notify","success","concat","useIcon","catch","failure"],"version":3,"file":"03-promises.0dc6da76.js.map"}